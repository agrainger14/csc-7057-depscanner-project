## Service Name
spring.application.name=vuln-service

## deps.dev API
deps.dev.url=https://api.deps.dev/
deps.dev.url.version=v3alpha/

## Postgresql Config
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/vuln-service
spring.datasource.username=vulnadmin
spring.datasource.password=vulnpwd
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
server.port=0

## Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

## Kafka Service
spring.kafka.bootstrap-servers=localhost:9092

## Kafka Consumer
spring.kafka.consumer.topic.name=vuln-scan-topic
spring.kafka.consumer.group-id=vuln-id
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=event:com.depscanner.vulnservice.event.VulnScanEvent

## Kafka Producer
spring.kafka.producer.topic.name=advisory-found-topic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.depscanner.vulnservice.event.AdvisoryFoundEvent

## Circuit Breaker
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

## Swagger Config
server.forward-headers-strategy=framework

## R4J Config
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

## Zipkin Config
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
logging.pattern.level = '%5p [${spring.application.name}, %X{traceId:-}, %X{spanId:-}]'